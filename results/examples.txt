4-Neighborhood:
  Radius = 1
  Move 00: Offset = [ 1,  0]; Cost = 1.000000; (cardinal)
  Move 01: Offset = [ 0,  1]; Cost = 1.000000; (cardinal)
  Move 02: Offset = [-1,  0]; Cost = 1.000000; (cardinal)
  Move 03: Offset = [ 0, -1]; Cost = 1.000000; (cardinal)

8-Neighborhood:
  Radius = 1
  Move 00: Offset = [ 1,  0]; Cost = 1.000000; (cardinal)
  Move 01: Offset = [ 1,  1]; Cost = 1.414216; (diagonal)
  Move 02: Offset = [ 0,  1]; Cost = 1.000000; (cardinal)
  Move 03: Offset = [-1,  1]; Cost = 1.414216; (diagonal)
  Move 04: Offset = [-1,  0]; Cost = 1.000000; (cardinal)
  Move 05: Offset = [-1, -1]; Cost = 1.414216; (diagonal)
  Move 06: Offset = [ 0, -1]; Cost = 1.000000; (cardinal)
  Move 07: Offset = [ 1, -1]; Cost = 1.414216; (diagonal)

16-Neighborhood:
  Radius = 2
  Move 00: Offset = [ 1,  0]; Cost = 1.000000; (cardinal)
  Move 01: Offset = [ 2,  1]; Cost = 2.236275;
  Move 02: Offset = [ 1,  1]; Cost = 1.414216; (diagonal)
  Move 03: Offset = [ 1,  2]; Cost = 2.236275;
  Move 04: Offset = [ 0,  1]; Cost = 1.000000; (cardinal)
  Move 05: Offset = [-1,  2]; Cost = 2.236275;
  Move 06: Offset = [-1,  1]; Cost = 1.414216; (diagonal)
  Move 07: Offset = [-2,  1]; Cost = 2.236275;
  Move 08: Offset = [-1,  0]; Cost = 1.000000; (cardinal)
  Move 09: Offset = [-2, -1]; Cost = 2.236275;
  Move 10: Offset = [-1, -1]; Cost = 1.414216; (diagonal)
  Move 11: Offset = [-1, -2]; Cost = 2.236275;
  Move 12: Offset = [ 0, -1]; Cost = 1.000000; (cardinal)
  Move 13: Offset = [ 1, -2]; Cost = 2.236275;
  Move 14: Offset = [ 1, -1]; Cost = 1.414216; (diagonal)
  Move 15: Offset = [ 2, -1]; Cost = 2.236275;

32-Neighborhood:
  Radius = 3
  Move 00: Offset = [ 1,  0]; Cost = 1.000000; (cardinal)
  Move 01: Offset = [ 3,  1]; Cost = 3.162255;
  Move 02: Offset = [ 2,  1]; Cost = 2.236275;
  Move 03: Offset = [ 3,  2]; Cost = 3.605392;
  Move 04: Offset = [ 1,  1]; Cost = 1.414216; (diagonal)
  Move 05: Offset = [ 2,  3]; Cost = 3.605392;
  Move 06: Offset = [ 1,  2]; Cost = 2.236275;
  Move 07: Offset = [ 1,  3]; Cost = 3.162255;
  Move 08: Offset = [ 0,  1]; Cost = 1.000000; (cardinal)
  Move 09: Offset = [-1,  3]; Cost = 3.162255;
  Move 10: Offset = [-1,  2]; Cost = 2.236275;
  Move 11: Offset = [-2,  3]; Cost = 3.605392;
  Move 12: Offset = [-1,  1]; Cost = 1.414216; (diagonal)
  Move 13: Offset = [-3,  2]; Cost = 3.605392;
  Move 14: Offset = [-2,  1]; Cost = 2.236275;
  Move 15: Offset = [-3,  1]; Cost = 3.162255;
  Move 16: Offset = [-1,  0]; Cost = 1.000000; (cardinal)
  Move 17: Offset = [-3, -1]; Cost = 3.162255;
  Move 18: Offset = [-2, -1]; Cost = 2.236275;
  Move 19: Offset = [-3, -2]; Cost = 3.605392;
  Move 20: Offset = [-1, -1]; Cost = 1.414216; (diagonal)
  Move 21: Offset = [-2, -3]; Cost = 3.605392;
  Move 22: Offset = [-1, -2]; Cost = 2.236275;
  Move 23: Offset = [-1, -3]; Cost = 3.162255;
  Move 24: Offset = [ 0, -1]; Cost = 1.000000; (cardinal)
  Move 25: Offset = [ 1, -3]; Cost = 3.162255;
  Move 26: Offset = [ 1, -2]; Cost = 2.236275;
  Move 27: Offset = [ 2, -3]; Cost = 3.605392;
  Move 28: Offset = [ 1, -1]; Cost = 1.414216; (diagonal)
  Move 29: Offset = [ 3, -2]; Cost = 3.605392;
  Move 30: Offset = [ 2, -1]; Cost = 2.236275;
  Move 31: Offset = [ 3, -1]; Cost = 3.162255;

64-Neighborhood:
  Radius = 5
  Move 00: Offset = [ 1,  0]; Cost = 1.000000; (cardinal)
  Move 01: Offset = [ 4,  1]; Cost = 4.123039;
  Move 02: Offset = [ 3,  1]; Cost = 3.162255;
  Move 03: Offset = [ 5,  2]; Cost = 5.385294;
  Move 04: Offset = [ 2,  1]; Cost = 2.236275;
  Move 05: Offset = [ 5,  3]; Cost = 5.830882;
  Move 06: Offset = [ 3,  2]; Cost = 3.605392;
  Move 07: Offset = [ 4,  3]; Cost = 5.000000;
  Move 08: Offset = [ 1,  1]; Cost = 1.414216; (diagonal)
  Move 09: Offset = [ 3,  4]; Cost = 5.000000;
  Move 10: Offset = [ 2,  3]; Cost = 3.605392;
  Move 11: Offset = [ 3,  5]; Cost = 5.830882;
  Move 12: Offset = [ 1,  2]; Cost = 2.236275;
  Move 13: Offset = [ 2,  5]; Cost = 5.385294;
  Move 14: Offset = [ 1,  3]; Cost = 3.162255;
  Move 15: Offset = [ 1,  4]; Cost = 4.123039;
  Move 16: Offset = [ 0,  1]; Cost = 1.000000; (cardinal)
  Move 17: Offset = [-1,  4]; Cost = 4.123039;
  Move 18: Offset = [-1,  3]; Cost = 3.162255;
  Move 19: Offset = [-2,  5]; Cost = 5.385294;
  Move 20: Offset = [-1,  2]; Cost = 2.236275;
  Move 21: Offset = [-3,  5]; Cost = 5.830882;
  Move 22: Offset = [-2,  3]; Cost = 3.605392;
  Move 23: Offset = [-3,  4]; Cost = 5.000000;
  Move 24: Offset = [-1,  1]; Cost = 1.414216; (diagonal)
  Move 25: Offset = [-4,  3]; Cost = 5.000000;
  Move 26: Offset = [-3,  2]; Cost = 3.605392;
  Move 27: Offset = [-5,  3]; Cost = 5.830882;
  Move 28: Offset = [-2,  1]; Cost = 2.236275;
  Move 29: Offset = [-5,  2]; Cost = 5.385294;
  Move 30: Offset = [-3,  1]; Cost = 3.162255;
  Move 31: Offset = [-4,  1]; Cost = 4.123039;
  Move 32: Offset = [-1,  0]; Cost = 1.000000; (cardinal)
  Move 33: Offset = [-4, -1]; Cost = 4.123039;
  Move 34: Offset = [-3, -1]; Cost = 3.162255;
  Move 35: Offset = [-5, -2]; Cost = 5.385294;
  Move 36: Offset = [-2, -1]; Cost = 2.236275;
  Move 37: Offset = [-5, -3]; Cost = 5.830882;
  Move 38: Offset = [-3, -2]; Cost = 3.605392;
  Move 39: Offset = [-4, -3]; Cost = 5.000000;
  Move 40: Offset = [-1, -1]; Cost = 1.414216; (diagonal)
  Move 41: Offset = [-3, -4]; Cost = 5.000000;
  Move 42: Offset = [-2, -3]; Cost = 3.605392;
  Move 43: Offset = [-3, -5]; Cost = 5.830882;
  Move 44: Offset = [-1, -2]; Cost = 2.236275;
  Move 45: Offset = [-2, -5]; Cost = 5.385294;
  Move 46: Offset = [-1, -3]; Cost = 3.162255;
  Move 47: Offset = [-1, -4]; Cost = 4.123039;
  Move 48: Offset = [ 0, -1]; Cost = 1.000000; (cardinal)
  Move 49: Offset = [ 1, -4]; Cost = 4.123039;
  Move 50: Offset = [ 1, -3]; Cost = 3.162255;
  Move 51: Offset = [ 2, -5]; Cost = 5.385294;
  Move 52: Offset = [ 1, -2]; Cost = 2.236275;
  Move 53: Offset = [ 3, -5]; Cost = 5.830882;
  Move 54: Offset = [ 2, -3]; Cost = 3.605392;
  Move 55: Offset = [ 3, -4]; Cost = 5.000000;
  Move 56: Offset = [ 1, -1]; Cost = 1.414216; (diagonal)
  Move 57: Offset = [ 4, -3]; Cost = 5.000000;
  Move 58: Offset = [ 3, -2]; Cost = 3.605392;
  Move 59: Offset = [ 5, -3]; Cost = 5.830882;
  Move 60: Offset = [ 2, -1]; Cost = 2.236275;
  Move 61: Offset = [ 5, -2]; Cost = 5.385294;
  Move 62: Offset = [ 3, -1]; Cost = 3.162255;
  Move 63: Offset = [ 4, -1]; Cost = 4.123039;

4-Neighbor Grid with Corner-Aligned Cells
Path produced by Regular A* Search with No Smoothing
+--+--+--+  0--1--2--3--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--4--5--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  6--7--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--+--+--+--+--+  +--8--9--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+  +--+--0--+--+--+--+
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+--+--+--1--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--+--+--+--+--+  +--+--+--+--2--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
+--+--+--+--+--+        +--+--3--4--5--6--7

4-Neighbor Grid with Corner-Aligned Cells
Path produced by Central A* Search with No Smoothing
+--+--+--+  0--1--2--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--3--4--5--6--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--7--8--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--+--+--+--+--+  +--+--9--0--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+  +--+--+--1--+--+--+
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+--+--+--+--2--3--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--+--+--+--+--+  +--+--+--+--+--+--4--5--+
|><|><|><|><|><|        |><|><|><|><|><|><|
+--+--+--+--+--+        +--+--+--+--+--6--7

8-Neighbor Grid with Corner-Aligned Cells
Path produced by Regular A* Search with No Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--4--5--6--7--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--3  +--+  +--8  +--+--+--+--+--+--6
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--2--+  +--+  +--9--0--1--2--3--4--5--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--1--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

8-Neighbor Grid with Corner-Aligned Cells
Path produced by Central A* Search with No Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--4--5--6--7--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--3--+  +--+  8--+  +--+--+--+--4--5--6
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--2--+  +--+  +--9--0--1--2--3--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--1--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

8-Neighbor Grid with Corner-Aligned Cells
Path produced by Central A* Search with Greedy Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--1--+--+--2--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+  +--+--+--+--+--+--5
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--3--+--+--+--4--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--+--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

8-Neighbor Grid with Corner-Aligned Cells
Path produced by Central A* Search with Tentpole Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--1--+--+--2--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+  +--+--+--+--+--+--5
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--3--4--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--+--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

16-Neighbor Grid with Corner-Aligned Cells
Path produced by Regular A* Search with No Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--5--6--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--4--+--+  +--+--7--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--3--+--+--+--+  +--+--+--+--8--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+  +--+--+--+--+--+--9
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--2--+  +--+  +--+--+--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--1--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

16-Neighbor Grid with Corner-Aligned Cells
Path produced by Central A* Search with No Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--5--6--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--4--+--+  +--+--7--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--3--+--+--+--+  +--+--+--+--8--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--2--+  +--+  +--+  +--+--+--+--+--+--9
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+--+--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--1--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

16-Neighbor Grid with Corner-Aligned Cells
Path produced by Central A* Search with Greedy Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--2--3--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--1--+--+--+--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+  +--+--+--+--+--+--4
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+--+--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--+--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

16-Neighbor Grid with Corner-Aligned Cells
Path produced by Central A* Search with Tentpole Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--2--3--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--1--+--+--+--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+  +--+--+--+--+--+--4
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+--+--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--+--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

4-Neighbor Grid with Center-Aligned Cells
Path produced by Regular A* Search with No Smoothing
+--+--+     +--+--2--3--4--5--6        1
|><|        |><|><|     |><|><|        |
+--+     +--+--+--1     +--+--7--8--9--0
|        |><|><|><|     |><|><|><|     |
+     +--+--8--9--0     +--+--+--+     +
|     |     |     |     |><|><|><|     |
+--+--+     7     +     +--+--+--+--+--+
   |><|     |     |     |><|><|><|><|><|
   +--+     6     +     +--+--+--+--+--+
   |><|     |     |     |><|><|><|><|><|
+--+--+     5     +--+--+--+--+--+--+--+
|><|><|     |           |><|><|><|><|><|
0--1--2--3--4           +--+--+--+--+--+

4-Neighbor Grid with Center-Aligned Cells
Path produced by Regular Mixed A* Search with No Smoothing
+--+--+     +--1--2--3--4--5--+        1
|><|        |><|><|     |><|><|        |
+--+     +--9--0--+     +--6--7--8--9--0
|        |><|><|><|     |><|><|><|     |
+     +--+--8--+--+     +--+--+--+     +
|     |     |     |     |><|><|><|     |
+--+--+     7     +     +--+--+--+--+--+
   |><|     |     |     |><|><|><|><|><|
   +--+     6     +     +--+--+--+--+--+
   |><|     |     |     |><|><|><|><|><|
+--+--+     5     +--+--+--+--+--+--+--+
|><|><|     |           |><|><|><|><|><|
0--1--2--3--4           +--+--+--+--+--+

4-Neighbor Grid with Corner-Aligned Cells
Path produced by Regular Jump Point Search with No Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--+--8--9--0--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  7--+  1--+  5--6--7--8--9--0--1
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  6--+  2--3--4--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
1--2--3--4--5--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

4-Neighbor Grid with Corner-Aligned Cells
Path produced by Regular Bounded Jump Point Search with No Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--+--8--9--0--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  7--+  1--+  5--6--7--8--9--0--1
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  6--+  2--3--4--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
1--2--3--4--5--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

4-Neighbor Grid with Corner-Aligned Cells
Path produced by Regular Mixed Jump Point Search with No Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--+--8--9--0--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  7--+  1--+  5--6--7--8--9--0--1
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  6--+  2--3--4--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
1--2--3--4--5--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

8-Neighbor Grid with Corner-Aligned Cells
Path produced by Regular Jump Point Search with No Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--4--5--6--7--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--3  +--+  +--8  +--1--2--3--4--5--6
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--2--+  +--+  +--9--0--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--1--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

8-Neighbor Grid with Corner-Aligned Cells
Path produced by Regular Bounded Jump Point Search with No Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--4--5--6--7--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--3  +--+  +--8  +--1--2--3--4--5--6
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--2--+  +--+  +--9--0--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--1--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

8-Neighbor Grid with Corner-Aligned Cells
Path produced by Regular Mixed Jump Point Search with No Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--4--5--6--7--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--3  +--+  +--8  +--1--2--3--4--5--6
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--2--+  +--+  +--9--0--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--1--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

16-Neighbor Grid with Corner-Aligned Cells
Path produced by Regular Jump Point Search with No Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--5--6--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--4--+--+  +--+--7--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--3--+--+--+--+  +--+--+--+--8--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--2--+  +--+  +--+  +--+--+--+--+--+--9
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--1--+--+  +--+  +--+--+--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--+--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

16-Neighbor Grid with Corner-Aligned Cells
Path produced by Regular Bounded Jump Point Search with No Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--5--6--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--4--+--+  +--+--7--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--3--+--+--+--+  +--+--+--+--8--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--2--+  +--+  +--+  +--+--+--+--+--+--9
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--1--+--+  +--+  +--+--+--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--+--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

16-Neighbor Grid with Corner-Aligned Cells
Path produced by Regular Mixed Jump Point Search with No Smoothing
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--5--6--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--4--+--+  +--+--7--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--3--+--+--+--+  +--+--+--+--8--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--2--+  +--+  +--+  +--+--+--+--+--+--9
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--1--+--+  +--+  +--+--+--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--+--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
0--+--+--+--+--+        +--+--+--+--+--+--+

8-Neighbor Grid for Low-Level Demo:
+--+--+     +--+--+--+--+--+--+        +
|><|        |><|><|     |><|><|        |
+--+     +--+--+--+     +--+--+--+--+--+
|        |><|><|><|     |><|><|><|     |
+     +--+--+--+--+     +--+--+--+     +
|     |     |     |     |><|><|><|     |
+--+--+     +     +     +--+--+--+--+--+
   |><|     |     |     |><|><|><|><|><|
   +--+     +     +     +--+--+--+--+--+
   |><|     |     |     |><|><|><|><|><|
+--+--+     +     +--+--+--+--+--+--+--+
|><|><|     |           |><|><|><|><|><|
+--+--+--+--+           +--+--+--+--+--+

Neighbors of [6, 2]:
  [7, 2] is not connected
  [7, 3] is not connected
  [6, 3] is connected
  [5, 3] is not connected
  [5, 2] is connected
  [5, 1] is connected
  [6, 1] is connected
  [7, 1] is not connected

Sightlines from [8, 1]:
  [13, 0] is not visible
  [13, 1] is visible
  [13, 2] is not visible
  [13, 3] is not visible
  [13, 4] is not visible
  [13, 5] is visible
  [13, 6] is visible

8-Neighbor Central Grid Path:
[0, 0], [0, 1], [0, 2], [0, 3], [1, 3], [2, 3], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [6, 3], [6, 4], [6, 5], [7, 5], [8, 5], [9, 5], [10, 5], [11, 6], [12, 6], [13, 6]

Path produced by Central A* with Greedy Smoothing:
[0, 0], [0, 3], [2, 3], [2, 2], [6, 2], [6, 5], [10, 5], [13, 6]

8-Neighbor Regular Grid Paths:
[6, 3], [6, 2], [5, 2], [4, 2], [3, 2], [2, 2], [2, 3], [1, 3], [0, 3], [0, 2], [0, 1], [0, 0]
[6, 3], [6, 2], [5, 2], [4, 2], [3, 2], [2, 2], [2, 3], [2, 4], [1, 5], [0, 6]
[6, 3], [6, 2], [6, 1], [6, 0], [7, 0], [8, 0], [9, 0], [10, 1], [11, 1], [12, 1], [13, 1], [13, 0]
[6, 3], [6, 4], [6, 5], [7, 5], [8, 5], [9, 5], [10, 5], [11, 5], [12, 5], [13, 6]

Grid for Mid-Level Demo:
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+  +--+--+--+--+--+--+
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+--+--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--+--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
+--+--+--+--+--+        +--+--+--+--+--+--+

Paths planned by 8-Neighbor Central A* with Tentpole Smoothing:
[9, 1], [13, 6]
[0, 0], [3, 1], [8, 1], [14, 7]
[0, 0], [3, 1], [6, 3], [7, 5], [13, 7]
[0, 7], [3, 3], [6, 3], [7, 5], [8, 5], [14, 4]
[2, 7], [4, 6], [5, 3], [7, 1], [13, 1], [14, 0]

Grid with last planned path:
+--+--+--+  +--+--+--+--+--+--+--+     +--5
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--3--+--+--+--+--+--4--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--+--+--2--+--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+  +--+--+--+--+--+--+
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--+--+--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--+--+--+--1--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
+--+--0--+--+--+        +--+--+--+--+--+--+

Paths sampled by 8-Neighbor Central Dijkstra with Tentpole Smoothing:
[7, 4], [6, 3], [3, 1], [0, 0]
[7, 4], [6, 3], [3, 3], [0, 7]
[7, 4], [6, 3], [5, 3], [4, 6], [2, 7]
[7, 4], [7, 1], [9, 1]
[7, 4], [7, 5], [8, 5], [13, 1], [14, 0]
[7, 4], [7, 5], [8, 5], [14, 4]
[7, 4], [7, 5], [14, 7]

Grid with last sampled path:
+--+--+--+  +--+--+--+--+--+--+--+     +--+
|><|><|><|  |><|><|><|><|><|><|><|     |><|
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|><|><|  |><|><|><|><|  |><|><|><|><|><|><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|  |><|><|><|><|><|  |><|><|><|><|  |><|
+--+--+--+--+--+--+--+  +--+--+--+--+--+--+
|><|><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--0  +--+--+--+--+--+--+
   |><|><|  |><|  |><|  |><|><|><|><|><|><|
+--+--+--+  +--+  +--1--+--+--+--+--+--+--+
|><|><|><|  |><|  |><|><|><|><|><|><|><|><|
+--+--+--+--+--+  +--+--+--+--+--+--+--+--+
|><|><|><|><|><|        |><|><|><|><|><|><|
+--+--+--+--+--+        +--+--+--+--+--+--2

Grid for High-Level Demo:
+--+--+     +--+--+--+--+--+--+        +
|><|        |><|><|     |><|><|        |
+--+     +--+--+--+     +--+--+--+--+--+
|        |><|><|><|     |><|><|><|     |
+     +--+--+--+--+     +--+--+--+     +
|     |     |     |     |><|><|><|     |
+--+--+     +     +     +--+--+--+--+--+
   |><|     |     |     |><|><|><|><|><|
   +--+     +     +     +--+--+--+--+--+
   |><|     |     |     |><|><|><|><|><|
+--+--+     +     +--+--+--+--+--+--+--+
|><|><|     |           |><|><|><|><|><|
+--+--+--+--+           +--+--+--+--+--+

Paths produced by recommended path planner:
[8, 1], [13, 6]
[0, 0], [0, 3], [2, 3], [2, 2], [6, 2], [6, 5], [8, 5], [13, 6]
[3, 6], [4, 6], [4, 2], [6, 2], [6, 5], [8, 5], [10, 4]
[0, 6], [1, 5], [2, 3], [2, 2], [3, 2], [6, 0], [8, 0], [11, 3], [13, 4]

Grid with last planned path:
+--+--+     +--+--5--+--6--+--+        +
|><|        |><|><|     |><|><|        |
+--+     +--+--+--+     +--+--+--+--+--+
|        |><|><|><|     |><|><|><|     |
+     3--4--+--+--+     +--+--+--+     +
|     |     |     |     |><|><|><|     |
+--+--2     +     +     +--+--+--7--+--+
   |><|     |     |     |><|><|><|><|><|
   +--+     +     +     +--+--+--+--+--8
   |><|     |     |     |><|><|><|><|><|
+--1--+     +     +--+--+--+--+--+--+--+
|><|><|     |           |><|><|><|><|><|
0--+--+--+--+           +--+--+--+--+--+

